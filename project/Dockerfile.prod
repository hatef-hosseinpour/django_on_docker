###########
# BUILDER #
###########

FROM python:3.10.12-slim AS builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install system dependencies
RUN apt update -y && \
    apt install -y --no-install-recommends gcc iputils-ping net-tools curl nano cron

# lint
RUN pip install --upgrade pip
#RUN pip install flake8==6.0.0
#COPY . /usr/src/app/
#RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########
FROM python:3.10.12-slim

# create directory for the app user
#RUN mkdir -p /home/app

# create the app user
#RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
#ENV HOME=/home/app
ENV APP_HOME=/app
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles 
WORKDIR $APP_HOME


# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends iputils-ping net-tools curl nano cron netcat-traditional
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# cron configuration
COPY ./crontab /etc/cron.d/django-crontab
RUN chmod 0644 /etc/cron.d/django-crontab
RUN crontab /etc/cron.d/django-crontab
RUN touch /var/log/cron.log && chmod 0644 /var/log/cron.log
# chown all the files to the app user
#RUN chown -R app:app $APP_HOME
# change to the app user
#USER app

# run entrypoint.prod.sh
ENTRYPOINT ["sh", "/app/entrypoint.prod.sh"]
#CMD ["sh", "-c", "cron && sh /home/app/web/entrypoint.prod.sh"]

